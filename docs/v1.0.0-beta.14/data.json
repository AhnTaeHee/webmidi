{
    "project": {
        "name": "WebMidi",
        "version": "1.0.0-beta.14",
        "description": "Tame the Web MIDI API. Send and receive MIDI messages with ease. Control instruments with user-friendly functions (playNote, sendPitchBend, etc.). React to MIDI input with simple event listeners (noteon, pitchbend, controlchange, etc.).",
        "url": ""
    },
    "files": {
        "src/webmidi.js": {
            "name": "src/webmidi.js",
            "modules": {},
            "classes": {
                "WebMidi": 1,
                "Input": 1,
                "Output": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "WebMidi": {
            "name": "WebMidi",
            "shortname": "WebMidi",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/webmidi.js",
            "line": 5,
            "description": "The `WebMidi` object makes it easier to work with the Web MIDI API. Basically, it simplifies\ntwo things: sending and reacting upon receiving MIDI messages.\n\nTo send MIDI messages, you simply need to call the desired method (`playNote()`,\n`sendPitchBend()`, `stopNote()`, etc.) with the appropriate parameters and all the native MIDI\ncommunication will be handled for you. The only additional thing that needs to be done is\nenable `WebMidi`. Here is an example:\n\n     WebMidi.enable(function() {\n       WebMidi.playNote(\"C3\");\n     });\n\nThe code above, calls the `WebMidi.enable()` method. Upon success, this method executes the\ncallback function specified as a parameter. In this case, the callback calls the `playnote()`\nfunction to play a 3rd octave C on all devices and channels.\n\nReceiving messages is just as easy. You simply have to set a callback function to be triggered\nwhen a specific MIDI message is received. For example, to listen for pitch bend events on any\ninput MIDI channels:\n\n     WebMidi.addListener('pitchbend', function(e) {\n       console.log(\"Pitch value: \" + e.value);\n     });\n\nAs you can see, this library makes it much easier to use the Web MIDI API. No need to manually\ncraft or decode binary MIDI messages anymore!",
            "static": 1,
            "todo": [
                "Add removeAllEventListeners()",
                "on() and once() functions",
                "Refine the \"filter\" param of addListener. Allow to listen for a specific controller or specific note.",
                "Add methods for system common messages and system realtime messages",
                "Add more examples in method documentation (playNote namely).",
                "Add specific events for channel mode messages ?",
                "Yuidoc does not allow multiple exceptions (@throws) for a single method ?!",
                "Should the sendsysex method allow Uint8Array param ?",
                "Define textual versions of channel mode messages",
                "State change events (MIDIConnectionEvent) are triggered for each device being connected\n       or disconnected. Therefore",
                "we should add the ability to filter the statechange listener\n       by device.",
                "allow adjustment of the start point for octaves (-2",
                "-1",
                "0",
                "etc.). See: https://en.wikipedia.org/wiki/Scientific_pitch_notation"
            ]
        },
        "Input": {
            "name": "Input",
            "shortname": "Input",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/webmidi.js",
            "line": 2615,
            "description": "The `Input` object represents an available MIDI input port. This object is created by the MIDI\nsubsystem and cannot be instantiated directly.",
            "params": [
                {
                    "name": "Subsystem",
                    "description": "`MIDIInput` object",
                    "type": "MIDIInput"
                }
            ]
        },
        "Output": {
            "name": "Output",
            "shortname": "Output",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/webmidi.js",
            "line": 3358,
            "description": "The `Output` object represents an available MIDI output port. This object is created by the\nMIDI subsystem and cannot be instantiated directly.",
            "params": [
                {
                    "name": "Subsystem",
                    "description": "`MIDIOutput` object",
                    "type": "MIDIOutput"
                }
            ]
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "src/webmidi.js",
            "line": 60,
            "description": "[read-only] Indicates whether the browser supports the Web MIDI API or not.",
            "itemtype": "property",
            "name": "supported",
            "type": "Boolean",
            "static": 1,
            "class": "WebMidi"
        },
        {
            "file": "src/webmidi.js",
            "line": 74,
            "description": "[read-only] Indicates whether the interface to the host's MIDI subsystem is currently\nenabled.",
            "itemtype": "property",
            "name": "enabled",
            "type": "Boolean",
            "static": 1,
            "class": "WebMidi"
        },
        {
            "file": "src/webmidi.js",
            "line": 89,
            "description": "[read-only] An array of all currently available MIDI input ports.",
            "itemtype": "property",
            "name": "inputs",
            "type": "{Input[]}",
            "static": 1,
            "class": "WebMidi"
        },
        {
            "file": "src/webmidi.js",
            "line": 103,
            "description": "[read-only] An array of all currently available MIDI output ports.",
            "itemtype": "property",
            "name": "outputs",
            "type": "{Output[]}",
            "static": 1,
            "class": "WebMidi"
        },
        {
            "file": "src/webmidi.js",
            "line": 117,
            "description": "[read-only] Indicates whether the interface to the host's MIDI subsystem is currently\nactive.",
            "itemtype": "property",
            "name": "sysexEnabled",
            "type": "Boolean",
            "static": 1,
            "class": "WebMidi"
        },
        {
            "file": "src/webmidi.js",
            "line": 132,
            "description": "[read-only] Current MIDI performance time in milliseconds. This can be used to queue events\nin the future.",
            "itemtype": "property",
            "name": "time",
            "type": "DOMHighResTimeStamp",
            "static": 1,
            "class": "WebMidi"
        },
        {
            "file": "src/webmidi.js",
            "line": 206,
            "description": "Checks if the Web MIDI API is available and then tries to connect to the host's MIDI subsystem.\nThis is an asynchronous operation. When it's done, the specified handler callback will be\nexecuted. If an error occurred, the callback function will receive an `Error` object as its\nsole parameter.",
            "itemtype": "method",
            "name": "enable",
            "static": 1,
            "params": [
                {
                    "name": "callback",
                    "description": "A function to execute upon success. This function will receive an\n`Error` object upon failure to enable the Web MIDI API.",
                    "type": "Function"
                },
                {
                    "name": "sysex",
                    "description": "Whether to enable MIDI system exclusive messages or not. When\nthis parameter is set to true, the browser may prompt the user for authorization.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "WebMidi"
        },
        {
            "file": "src/webmidi.js",
            "line": 255,
            "description": "If enabled, this function will completely disable `WebMidi` and close any connection to the MIDI\nsubsystem.",
            "itemtype": "method",
            "name": "disable",
            "static": 1,
            "class": "WebMidi"
        },
        {
            "file": "src/webmidi.js",
            "line": 425,
            "description": "Returns an `Input` object representing the input port with the specified id.",
            "itemtype": "method",
            "name": "getInputById",
            "static": 1,
            "params": [
                {
                    "name": "id",
                    "description": "The id of the port. Ids can be viewed by looking at the `WebMidi.inputs`\n array.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A MIDIInput port matching the specified id. If no matching port\n can be found, the method returns `false`.",
                "type": "Input|false"
            },
            "class": "WebMidi"
        },
        {
            "file": "src/webmidi.js",
            "line": 452,
            "description": "Returns an `Output` object representing the output port matching the specified id.",
            "itemtype": "method",
            "name": "getOutputById",
            "static": 1,
            "params": [
                {
                    "name": "id",
                    "description": "The id of the port. Ids can be viewed by looking at the `WebMidi.outputs`\n array.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A MIDIOutput port matching the specified id. If no matching\n port can be found, the method returns `false`.",
                "type": "Output|false"
            },
            "class": "WebMidi"
        },
        {
            "file": "src/webmidi.js",
            "line": 479,
            "description": "Returns the first MIDI `Input` that matches the specified name.",
            "itemtype": "method",
            "name": "getInputByName",
            "static": 1,
            "params": [
                {
                    "name": "name",
                    "description": "The name of a MIDI input port such as those visible in the\n`WebMidi.inputs` array.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The `Input` that was found or `false` if no input matched the specified\nname.",
                "type": "Input|False"
            },
            "class": "WebMidi"
        },
        {
            "file": "src/webmidi.js",
            "line": 505,
            "description": "Returns the first MIDI `Output` that matches the specified name.",
            "itemtype": "method",
            "name": "getOutputByName",
            "static": 1,
            "params": [
                {
                    "name": "name",
                    "description": "The name of a MIDI output port such as those visible in the\n`WebMidi.outputs` array.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The `Output` that was found or `false` if no output matched the\nspecified name.",
                "type": "Output|False"
            },
            "class": "WebMidi"
        },
        {
            "file": "src/webmidi.js",
            "line": 2529,
            "itemtype": "method",
            "name": "_updateInputsAndOutputs",
            "access": "private",
            "tagname": "",
            "class": "WebMidi"
        },
        {
            "file": "src/webmidi.js",
            "line": 2593,
            "itemtype": "method",
            "name": "_onInterfaceStateChange",
            "access": "private",
            "tagname": "",
            "class": "WebMidi"
        },
        {
            "file": "src/webmidi.js",
            "line": 2601,
            "description": "Event emitted when the interface's state changes. Typically, this happens when a MIDI device\nis being plugged or unplugged. This event cannot be listened for on a single specific MIDI\ndevice, it is intended to be interface-wide.",
            "itemtype": "event",
            "name": "statechange",
            "params": [
                {
                    "name": "The",
                    "description": "`MIDIConnectionEvent` object describing the state change.",
                    "type": "MIDIConnectionEvent"
                }
            ],
            "class": "WebMidi"
        },
        {
            "file": "src/webmidi.js",
            "line": 2633,
            "description": "[read-only] Status of the MIDI port's connection",
            "itemtype": "property",
            "name": "connection",
            "type": "String",
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 2646,
            "description": "[read-only] ID string of the MIDI port",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 2659,
            "description": "[read-only] Manufacturer of the device to which this port belongs",
            "itemtype": "property",
            "name": "manufacturer",
            "type": "String",
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 2672,
            "description": "[read-only] Name of the MIDI port",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 2685,
            "description": "[read-only] State of the MIDI port",
            "itemtype": "property",
            "name": "state",
            "type": "String",
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 2703,
            "itemtype": "method",
            "name": "_initializeUserHandlers",
            "access": "private",
            "tagname": "",
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 2723,
            "itemtype": "method",
            "name": "_onMidiMessage",
            "access": "private",
            "tagname": "",
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 2737,
            "itemtype": "method",
            "name": "_parseChannelEvent",
            "params": [
                {
                    "name": "e",
                    "description": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 2767,
            "description": "Event emitted when a note off MIDI message has been received on a specific device and\nchannel.",
            "itemtype": "event",
            "name": "noteoff",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The MIDI input device that triggered the event.",
                            "type": "MIDIInput"
                        },
                        {
                            "name": "data",
                            "description": "The raw MIDI message as an array of 8 bit values.",
                            "type": "Uint8Array"
                        },
                        {
                            "name": "receivedTime",
                            "description": "The time when the event occurred (in milliseconds since\nstart).",
                            "type": "Number"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The timestamp when the event occurred (in milliseconds since\nthe epoch).",
                            "type": "Uint"
                        },
                        {
                            "name": "channel",
                            "description": "The channel where the event occurred (between 1 and 16).",
                            "type": "Uint"
                        },
                        {
                            "name": "type",
                            "description": "The type of event that occurred.",
                            "type": "String"
                        },
                        {
                            "name": "note",
                            "description": "",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "number",
                                    "description": "The MIDI note number.",
                                    "type": "Uint"
                                },
                                {
                                    "name": "name",
                                    "description": "The usual note name (C, C#, D, D#, etc.).",
                                    "type": "String"
                                },
                                {
                                    "name": "octave",
                                    "description": "The octave (between -2 and 8).",
                                    "type": "Uint"
                                }
                            ]
                        },
                        {
                            "name": "velocity",
                            "description": "The release velocity (between 0 and 1).",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 2809,
            "description": "Event emitted when a note on MIDI message has been received on a specific device and\nchannel.",
            "itemtype": "event",
            "name": "noteon",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The MIDI input device that triggered the event.",
                            "type": "MIDIInput"
                        },
                        {
                            "name": "data",
                            "description": "The raw MIDI message as an array of 8 bit values.",
                            "type": "Uint8Array"
                        },
                        {
                            "name": "receivedTime",
                            "description": "The time when the event occurred (in milliseconds since\nstart).",
                            "type": "Number"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The timestamp when the event occurred (in milliseconds since\nthe epoch).",
                            "type": "Uint"
                        },
                        {
                            "name": "channel",
                            "description": "The channel where the event occurred (between 1 and 16).",
                            "type": "Uint"
                        },
                        {
                            "name": "type",
                            "description": "The type of event that occurred.",
                            "type": "String"
                        },
                        {
                            "name": "note",
                            "description": "",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "number",
                                    "description": "The MIDI note number.",
                                    "type": "Uint"
                                },
                                {
                                    "name": "name",
                                    "description": "The usual note name (C, C#, D, D#, etc.).",
                                    "type": "String"
                                },
                                {
                                    "name": "octave",
                                    "description": "The octave (between -2 and 8).",
                                    "type": "Uint"
                                }
                            ]
                        },
                        {
                            "name": "velocity",
                            "description": "The attack velocity (between 0 and 1).",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 2851,
            "description": "Event emitted when a key-specific aftertouch MIDI message has been received on a specific\ndevice and channel.",
            "itemtype": "event",
            "name": "keyaftertouch",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The MIDI input device that triggered the event.",
                            "type": "MIDIInput"
                        },
                        {
                            "name": "data",
                            "description": "The raw MIDI message as an array of 8 bit values.",
                            "type": "Uint8Array"
                        },
                        {
                            "name": "receivedTime",
                            "description": "The time when the event occurred (in milliseconds since\nstart).",
                            "type": "Number"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The timestamp when the event occurred (in milliseconds since\nthe epoch).",
                            "type": "Uint"
                        },
                        {
                            "name": "channel",
                            "description": "The channel where the event occurred (between 1 and 16).",
                            "type": "Uint"
                        },
                        {
                            "name": "type",
                            "description": "The type of event that occurred.",
                            "type": "String"
                        },
                        {
                            "name": "note",
                            "description": "",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "number",
                                    "description": "The MIDI note number.",
                                    "type": "Uint"
                                },
                                {
                                    "name": "name",
                                    "description": "The usual note name (C, C#, D, D#, etc.).",
                                    "type": "String"
                                },
                                {
                                    "name": "octave",
                                    "description": "The octave (between -2 and 8).",
                                    "type": "Uint"
                                }
                            ]
                        },
                        {
                            "name": "value",
                            "description": "The aftertouch amount (between 0 and 1).",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 2896,
            "description": "Event emitted when a control change MIDI message has been received on a specific device and\nchannel.",
            "itemtype": "event",
            "name": "controlchange",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The MIDI input device that triggered the event.",
                            "type": "MIDIInput"
                        },
                        {
                            "name": "data",
                            "description": "The raw MIDI message as an array of 8 bit values.",
                            "type": "Uint8Array"
                        },
                        {
                            "name": "receivedTime",
                            "description": "The time when the event occurred (in milliseconds since\nstart).",
                            "type": "Number"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The timestamp when the event occurred (in milliseconds since\nthe epoch).",
                            "type": "Uint"
                        },
                        {
                            "name": "channel",
                            "description": "The channel where the event occurred (between 1 and 16).",
                            "type": "Uint"
                        },
                        {
                            "name": "type",
                            "description": "The type of event that occurred.",
                            "type": "String"
                        },
                        {
                            "name": "controller",
                            "description": "",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "number",
                                    "description": "The number of the controller.",
                                    "type": "Uint"
                                },
                                {
                                    "name": "name",
                                    "description": "The number of the controller.",
                                    "type": "String"
                                }
                            ]
                        },
                        {
                            "name": "value",
                            "description": "The value received (between 0 and 127).",
                            "type": "Uint"
                        }
                    ]
                }
            ],
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 2938,
            "description": "Event emitted when a channel mode MIDI message has been received on a specific device and\nchannel.",
            "itemtype": "event",
            "name": "channelmode",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The MIDI input device that triggered the event.",
                            "type": "MIDIInput"
                        },
                        {
                            "name": "data",
                            "description": "The raw MIDI message as an array of 8 bit values.",
                            "type": "Uint8Array"
                        },
                        {
                            "name": "receivedTime",
                            "description": "The time when the event occurred (in milliseconds since\nstart).",
                            "type": "Number"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The timestamp when the event occurred (in milliseconds\nsince the epoch).",
                            "type": "Uint"
                        },
                        {
                            "name": "channel",
                            "description": "The channel where the event occurred (between 1 and 16).",
                            "type": "Uint"
                        },
                        {
                            "name": "type",
                            "description": "The type of event that occurred.",
                            "type": "String"
                        },
                        {
                            "name": "controller",
                            "description": "",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "number",
                                    "description": "The number of the controller.",
                                    "type": "Uint"
                                },
                                {
                                    "name": "name",
                                    "description": "The number of the controller.",
                                    "type": "String"
                                }
                            ]
                        },
                        {
                            "name": "value",
                            "description": "The value received (between 0 and 127).",
                            "type": "Uint"
                        }
                    ]
                }
            ],
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 2977,
            "description": "Event emitted when a program change MIDI message has been received on a specific device and\nchannel.",
            "itemtype": "event",
            "name": "programchange",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The MIDI input device that triggered the event.",
                            "type": "MIDIInput"
                        },
                        {
                            "name": "data",
                            "description": "The raw MIDI message as an array of 8 bit values.",
                            "type": "Uint8Array"
                        },
                        {
                            "name": "receivedTime",
                            "description": "The time when the event occurred (in milliseconds since\nstart).",
                            "type": "Number"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The timestamp when the event occurred (in milliseconds since\nthe epoch).",
                            "type": "Uint"
                        },
                        {
                            "name": "channel",
                            "description": "The channel where the event occurred (between 1 and 16).",
                            "type": "Uint"
                        },
                        {
                            "name": "type",
                            "description": "The type of event that occurred.",
                            "type": "String"
                        },
                        {
                            "name": "value",
                            "description": "The value received (between 0 and 127).",
                            "type": "Uint"
                        }
                    ]
                }
            ],
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 3006,
            "description": "Event emitted when a channel-wide aftertouch MIDI message has been received on a specific\ndevice and channel.",
            "itemtype": "event",
            "name": "channelaftertouch",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The MIDI input device that triggered the event.",
                            "type": "MIDIInput"
                        },
                        {
                            "name": "data",
                            "description": "The raw MIDI message as an array of 8 bit values.",
                            "type": "Uint8Array"
                        },
                        {
                            "name": "receivedTime",
                            "description": "The time when the event occurred (in milliseconds since\nstart).",
                            "type": "Number"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The timestamp when the event occurred (in milliseconds since\nthe epoch).",
                            "type": "Uint"
                        },
                        {
                            "name": "channel",
                            "description": "The channel where the event occurred (between 1 and 16).",
                            "type": "Uint"
                        },
                        {
                            "name": "type",
                            "description": "The type of event that occurred.",
                            "type": "String"
                        },
                        {
                            "name": "value",
                            "description": "The aftertouch value received (between 0 and 1).",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 3035,
            "description": "Event emitted when a pitch bend MIDI message has been received on a specific device and\nchannel.",
            "itemtype": "event",
            "name": "pitchbend",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The MIDI input device that triggered the event.",
                            "type": "MIDIInput"
                        },
                        {
                            "name": "data",
                            "description": "The raw MIDI message as an array of 8 bit values.",
                            "type": "Uint8Array"
                        },
                        {
                            "name": "receivedTime",
                            "description": "The time when the event occurred (in milliseconds since\nstart).",
                            "type": "Number"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The timestamp when the event occurred (in milliseconds since\nthe epoch).",
                            "type": "Uint"
                        },
                        {
                            "name": "channel",
                            "description": "The channel where the event occurred (between 1 and 16).",
                            "type": "Uint"
                        },
                        {
                            "name": "type",
                            "description": "The type of event that occurred.",
                            "type": "String"
                        },
                        {
                            "name": "value",
                            "description": "The pitch bend value received (between -1 and 1).",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 3077,
            "itemtype": "method",
            "name": "_parseSystemEvent",
            "access": "private",
            "tagname": "",
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 3095,
            "description": "Event emitted when a system exclusive MIDI message has been received.",
            "itemtype": "event",
            "name": "sysex",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The MIDI input device that triggered the event.",
                            "type": "MIDIInput"
                        },
                        {
                            "name": "data",
                            "description": "The raw MIDI message as an array of 8 bit values.",
                            "type": "Uint8Array"
                        },
                        {
                            "name": "receivedTime",
                            "description": "The time when the event occurred (in milliseconds since\nstart).",
                            "type": "Number"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The timestamp when the event occurred (in milliseconds since\nthe epoch).",
                            "type": "Uint"
                        },
                        {
                            "name": "type",
                            "description": "The type of event that occurred.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 3118,
            "description": "Event emitted when a system MIDI time code quarter frame message has been received.",
            "itemtype": "event",
            "name": "timecode",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The MIDI input device that triggered the event.",
                            "type": "MIDIInput"
                        },
                        {
                            "name": "data",
                            "description": "The raw MIDI message as an array of 8 bit values.",
                            "type": "Uint8Array"
                        },
                        {
                            "name": "receivedTime",
                            "description": "The time when the event occurred (in milliseconds since\nstart).",
                            "type": "Number"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The timestamp when the event occurred (in milliseconds since\nthe epoch).",
                            "type": "Uint"
                        },
                        {
                            "name": "type",
                            "description": "The type of event that occurred.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 3143,
            "description": "Event emitted when a system song position pointer MIDI message has been received.",
            "itemtype": "event",
            "name": "songposition",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The MIDI input device that triggered the event.",
                            "type": "MIDIInput"
                        },
                        {
                            "name": "data",
                            "description": "The raw MIDI message as an array of 8 bit values.",
                            "type": "Uint8Array"
                        },
                        {
                            "name": "receivedTime",
                            "description": "The time when the event occurred (in milliseconds since\nstart).",
                            "type": "Number"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The timestamp when the event occurred (in milliseconds\nsince the epoch).",
                            "type": "Uint"
                        },
                        {
                            "name": "type",
                            "description": "The type of event that occurred.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 3168,
            "description": "Event emitted when a system song select MIDI message has been received.",
            "itemtype": "event",
            "name": "songselect",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The MIDI input device that triggered the event.",
                            "type": "MIDIInput"
                        },
                        {
                            "name": "data",
                            "description": "The raw MIDI message as an array of 8 bit\n                                   values.",
                            "type": "Uint8Array"
                        },
                        {
                            "name": "receivedTime",
                            "description": "The time when the event occurred (in\n                                   milliseconds since start).",
                            "type": "Number"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The timestamp when the event occurred\n                                   (in milliseconds since the epoch).",
                            "type": "Uint"
                        },
                        {
                            "name": "type",
                            "description": "The type of event that occurred.",
                            "type": "String"
                        },
                        {
                            "name": "song",
                            "description": "Song (or sequence) number to select.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 3189,
            "description": "Event emitted when a system tune request MIDI message has been received.",
            "itemtype": "event",
            "name": "tuningrequest",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The MIDI input device that triggered the event.",
                            "type": "MIDIInput"
                        },
                        {
                            "name": "data",
                            "description": "The raw MIDI message as an array of 8 bit\n                                   values.",
                            "type": "Uint8Array"
                        },
                        {
                            "name": "receivedTime",
                            "description": "The time when the event occurred (in\n                                   milliseconds since start).",
                            "type": "Number"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The timestamp when the event occurred\n                                   (in milliseconds since the epoch).",
                            "type": "Uint"
                        },
                        {
                            "name": "type",
                            "description": "The type of event that occurred.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 3208,
            "description": "Event emitted when a system timing clock MIDI message has been received.",
            "itemtype": "event",
            "name": "clock",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The MIDI input device that triggered the event.",
                            "type": "MIDIInput"
                        },
                        {
                            "name": "data",
                            "description": "The raw MIDI message as an array of 8 bit\n                                   values.",
                            "type": "Uint8Array"
                        },
                        {
                            "name": "receivedTime",
                            "description": "The time when the event occurred (in\n                                   milliseconds since start).",
                            "type": "Number"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The timestamp when the event occurred\n                                   (in milliseconds since the epoch).",
                            "type": "Uint"
                        },
                        {
                            "name": "type",
                            "description": "The type of event that occurred.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 3227,
            "description": "Event emitted when a system start MIDI message has been received.",
            "itemtype": "event",
            "name": "start",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The MIDI input device that triggered the event.",
                            "type": "MIDIInput"
                        },
                        {
                            "name": "data",
                            "description": "The raw MIDI message as an array of 8 bit\n                                   values.",
                            "type": "Uint8Array"
                        },
                        {
                            "name": "receivedTime",
                            "description": "The time when the event occurred (in\n                                   milliseconds since start).",
                            "type": "Number"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The timestamp when the event occurred\n                                   (in milliseconds since the epoch).",
                            "type": "Uint"
                        },
                        {
                            "name": "type",
                            "description": "The type of event that occurred.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 3246,
            "description": "Event emitted when a system continue MIDI message has been received.",
            "itemtype": "event",
            "name": "continue",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The MIDI input device that triggered the event.",
                            "type": "MIDIInput"
                        },
                        {
                            "name": "data",
                            "description": "The raw MIDI message as an array of 8 bit\n                                   values.",
                            "type": "Uint8Array"
                        },
                        {
                            "name": "receivedTime",
                            "description": "The time when the event occurred (in\n                                   milliseconds since start).",
                            "type": "Number"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The timestamp when the event occurred\n                                   (in milliseconds since the epoch).",
                            "type": "Uint"
                        },
                        {
                            "name": "type",
                            "description": "The type of event that occurred.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 3265,
            "description": "Event emitted when a system stop MIDI message has been received.",
            "itemtype": "event",
            "name": "stop",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The MIDI input device that triggered the event.",
                            "type": "MIDIInput"
                        },
                        {
                            "name": "data",
                            "description": "The raw MIDI message as an array of 8 bit\n                                   values.",
                            "type": "Uint8Array"
                        },
                        {
                            "name": "receivedTime",
                            "description": "The time when the event occurred (in\n                                   milliseconds since start).",
                            "type": "Number"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The timestamp when the event occurred\n                                   (in milliseconds since the epoch).",
                            "type": "Uint"
                        },
                        {
                            "name": "type",
                            "description": "The type of event that occurred.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 3284,
            "description": "Event emitted when a system active sensing MIDI message has been received.",
            "itemtype": "event",
            "name": "activesensing",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The MIDI input device that triggered the event.",
                            "type": "MIDIInput"
                        },
                        {
                            "name": "data",
                            "description": "The raw MIDI message as an array of 8 bit\n                                   values.",
                            "type": "Uint8Array"
                        },
                        {
                            "name": "receivedTime",
                            "description": "The time when the event occurred (in\n                                   milliseconds since start).",
                            "type": "Number"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The timestamp when the event occurred\n                                   (in milliseconds since the epoch).",
                            "type": "Uint"
                        },
                        {
                            "name": "type",
                            "description": "The type of event that occurred.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 3303,
            "description": "Event emitted when a system reset MIDI message has been received.",
            "itemtype": "event",
            "name": "reset",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The MIDI input device that triggered the event.",
                            "type": "MIDIInput"
                        },
                        {
                            "name": "data",
                            "description": "The raw MIDI message as an array of 8 bit values.",
                            "type": "Uint8Array"
                        },
                        {
                            "name": "receivedTime",
                            "description": "The time when the event occurred (in milliseconds since\nstart).",
                            "type": "Number"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The timestamp when the event occurred (in milliseconds\nsince the epoch).",
                            "type": "Uint"
                        },
                        {
                            "name": "type",
                            "description": "The type of event that occurred.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 3326,
            "description": "Event emitted when an unknown system MIDI message has been received. It could be, for\nexample, one of the undefined/reserved messages.",
            "itemtype": "event",
            "name": "unknownsystemmessage",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "device",
                            "description": "The MIDI input device that triggered the event.",
                            "type": "MIDIInput"
                        },
                        {
                            "name": "data",
                            "description": "The raw MIDI message as an array of 8 bit values.",
                            "type": "Uint8Array"
                        },
                        {
                            "name": "receivedTime",
                            "description": "The time when the event occurred (in milliseconds since\nstart).",
                            "type": "Number"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The timestamp when the event occurred (in milliseconds since\nthe epoch).",
                            "type": "Uint"
                        },
                        {
                            "name": "type",
                            "description": "The type of event that occurred.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Input"
        },
        {
            "file": "src/webmidi.js",
            "line": 3373,
            "description": "[read-only] Status of the MIDI port's connection",
            "itemtype": "property",
            "name": "connection",
            "type": "String",
            "class": "Output"
        },
        {
            "file": "src/webmidi.js",
            "line": 3386,
            "description": "[read-only] ID string of the MIDI port",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "class": "Output"
        },
        {
            "file": "src/webmidi.js",
            "line": 3399,
            "description": "[read-only] Manufacturer of the device to which this port belongs",
            "itemtype": "property",
            "name": "manufacturer",
            "type": "String",
            "class": "Output"
        },
        {
            "file": "src/webmidi.js",
            "line": 3412,
            "description": "[read-only] Name of the MIDI port",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "Output"
        },
        {
            "file": "src/webmidi.js",
            "line": 3425,
            "description": "[read-only] State of the MIDI port",
            "itemtype": "property",
            "name": "state",
            "type": "String",
            "class": "Output"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/webmidi.js:425"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/webmidi.js:452"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/webmidi.js:479"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/webmidi.js:505"
        }
    ]
}